name: Build Android Kernel

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            device-tree-compiler \
            gcc-aarch64-linux-gnu \
            git \
            make \
            bc \
            flex \
            bison \
            libssl-dev \
            libncurses5-dev \
            libelf-dev \
            zlib1g-dev \
            python3 \
            gcc-9 g++-9

      - name: Set up environment
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "ANDROID_MAJOR_VERSION=q" >> $GITHUB_ENV
          echo "PLATFORM_VERSION=10" >> $GITHUB_ENV
          echo "CONFIG_SECTION_MISMATCH_WARN_ONLY=y" >> $GITHUB_ENV
          echo "CC=gcc-9" >> $GITHUB_ENV
          echo "HOSTCC=gcc-9" >> $GITHUB_ENV

      - name: Initialize configuration
        run: |
          make ARCH=arm64 distclean || true
          make ARCH=arm64 m10lte_swa_open_defconfig
          yes "" | make ARCH=arm64 oldconfig

      - name: Build kernel (first pass to generate files)
        run: |
          # Build just enough to generate the dtc files
          make ARCH=arm64 scripts/dtc/dtc-parser.tab.h || true

      - name: Apply dtc workaround
        run: |
          # Now the file should exist - apply the fix
          if [ -f scripts/dtc/dtc-lexer.lex.c ]; then
            sed -i 's/^YYLTYPE yylloc;/extern YYLTYPE yylloc;/' scripts/dtc/dtc-lexer.lex.c
          else
            echo "Warning: dtc-lexer.lex.c not found, continuing without workaround"
          fi

      - name: Complete kernel build
        run: |
          make ARCH=arm64 -j$(nproc)

      - name: Verify artifacts
        run: |
          ls -la arch/arm64/boot/
          [ -f arch/arm64/boot/Image ] && echo "Kernel image found" || echo "Kernel image missing"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-artifacts
          path: |
            arch/arm64/boot/Image*
            .config
          if-no-files-found: error
